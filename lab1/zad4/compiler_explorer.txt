PlainOldClass::set(int):
  push rbp
  mov rbp, rsp
  mov QWORD PTR [rbp-8], rdi
  mov DWORD PTR [rbp-12], esi
  mov rax, QWORD PTR [rbp-8]
  mov edx, DWORD PTR [rbp-12]
  mov DWORD PTR [rax], edx
  nop
  pop rbp
  ret
CoolClass::set(int):
  push rbp
  mov rbp, rsp
  mov QWORD PTR [rbp-8], rdi
  mov DWORD PTR [rbp-12], esi
  mov rax, QWORD PTR [rbp-8]
  mov edx, DWORD PTR [rbp-12]
  mov DWORD PTR [rax+8], edx
  nop
  pop rbp
  ret
CoolClass::get():
  push rbp
  mov rbp, rsp
  mov QWORD PTR [rbp-8], rdi
  mov rax, QWORD PTR [rbp-8]
  mov eax, DWORD PTR [rax+8]
  pop rbp
  ret
Base::Base() [base object constructor]:
  push rbp
  mov rbp, rsp
  mov QWORD PTR [rbp-8], rdi
  mov edx, OFFSET FLAT:vtable for Base+16
  mov rax, QWORD PTR [rbp-8]
  mov QWORD PTR [rax], rdx
  nop
  pop rbp
  ret
CoolClass::CoolClass() [base object constructor]:
  push rbp
  mov rbp, rsp
  sub rsp, 16
  mov QWORD PTR [rbp-8], rdi
  mov rax, QWORD PTR [rbp-8]
  mov rdi, rax
  call Base::Base() [base object constructor]
  mov edx, OFFSET FLAT:vtable for CoolClass+16
  mov rax, QWORD PTR [rbp-8]
  mov QWORD PTR [rax], rdx
  nop
  leave
  ret
main: 
  push rbp ; stavljamo rbp na stog
  mov rbp, rsp ; register stack pointer u rbp
  push rbx ; stavljamo rbx na stog
  sub rsp, 24 ; oduzimamo (Base=8B, CoolClass=16B) = 24B
  mov edi, 16 ; 16B za CoolClass
  call operator new(unsigned long) ; dinamicki alociramo memoriju
  mov rbx, rax ; rax - za vracanje vrijednosti iz funkcija (pointera)
  mov rdi, rbx ; spremamo this is rbx u rdi
  call CoolClass::CoolClass() [complete object constructor] ; pozivamo konstruktor
  mov QWORD PTR [rbp-24], rbx ; spremamo pointer koji pokazuje na dinamicki alociranu memoriju na adres [rbp-24]
  lea rax, [rbp-28] ; adresa PlainOldClass na stogu
  mov esi, 42 ; esi registar za #2 argument na stogu
  mov rdi, rax ; stavljamo adresu PlainOldClass-a kao this argument fje
  call PlainOldClass::set(int) ; postavljamo preko rdi i esi registara vrijednost u fji set
  mov rax, QWORD PTR [rbp-24] ; loadamo 
  mov rax, QWORD PTR [rax]
  mov rdx, QWORD PTR [rax]
  mov rax, QWORD PTR [rbp-24]
  mov esi, 42
  mov rdi, rax
  call rdx
  mov eax, 0
  mov rbx, QWORD PTR [rbp-8]
  leave
  ret
vtable for CoolClass:
  .quad 0
  .quad typeinfo for CoolClass
  .quad CoolClass::set(int)
  .quad CoolClass::get()
vtable for Base:
  .quad 0
  .quad typeinfo for Base
  .quad __cxa_pure_virtual
  .quad __cxa_pure_virtual
typeinfo for CoolClass:
  .quad vtable for __cxxabiv1::__si_class_type_info+16
  .quad typeinfo name for CoolClass
  .quad typeinfo for Base
typeinfo name for CoolClass:
  .string "9CoolClass"
typeinfo for Base:
  .quad vtable for __cxxabiv1::__class_type_info+16
  .quad typeinfo name for Base
typeinfo name for Base:
  .string "4Base"